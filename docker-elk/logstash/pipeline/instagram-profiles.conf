input {
  kafka {
    bootstrap_servers => "kafka-1:29092,kafka-2:29093,kafka-3:29094" # Kafka 브로커 주소
    topics => ["instagram_scrapper_api"] # Kafka 토픽에 설정한 토픽 이름 여기서 설정
    group_id => "logstash_group"
    codec => "json"
  }
}

filter {
  # JSON 데이터 파싱
  json {
    source => "message"
    target => "parsed_data"  # 파싱된 JSON 데이터를 저장할 타겟 필드
    remove_field => ["message"]  # 원본 message 필드를 제거
  }

  # 빈 값 제거
  if ![parsed_data] or [parsed_data] == {} {
    drop { }
  }

  # parsed_data 하위 필드들을 변환 및 매핑
  mutate {
    rename => {
      "[parsed_data][full_name]" => "full_name"
      "[parsed_data][id]" => "id"
      "[parsed_data][is_new]" => "is_new"
      "[parsed_data][is_private]" => "is_private"
      "[parsed_data][is_verified]" => "is_verified"
      "[parsed_data][latest_reel_media]" => "latest_reel_media"
      "[parsed_data][profile_pic_id]" => "profile_pic_id"
      "[parsed_data][profile_pic_url]" => "profile_pic_url"
      "[parsed_data][username]" => "username"
    }

    # 데이터 타입 변환
    convert => {
      "is_new" => "boolean"
      "is_private" => "boolean"
      "is_verified" => "boolean"
      "latest_reel_media" => "integer"
    }

    # 빈 값 제거
    remove_field => ["[parsed_data][full_name]", "[parsed_data][id]", "[parsed_data][is_new]", "[parsed_data][is_private]", "[parsed_data][is_verified]", "[parsed_data][latest_reel_media]", "[parsed_data][profile_pic_id]", "[parsed_data][profile_pic_url]", "[parsed_data][username]"]
  }

  # 빈 필드 제거
  if [full_name] == "" or ![full_name] { mutate { remove_field => ["full_name"] } }
  if [id] == "" or ![id] { mutate { remove_field => ["id"] } }
  if [is_new] == "" or ![is_new] { mutate { remove_field => ["is_new"] } }
  if [is_private] == "" or ![is_private] { mutate { remove_field => ["is_private"] } }
  if [is_verified] == "" or ![is_verified] { mutate { remove_field => ["is_verified"] } }
  if [latest_reel_media] == "" or ![latest_reel_media] { mutate { remove_field => ["latest_reel_media"] } }
  if [profile_pic_id] == "" or ![profile_pic_id] { mutate { remove_field => ["profile_pic_id"] } }
  if [profile_pic_url] == "" or ![profile_pic_url] { mutate { remove_field => ["profile_pic_url"] } }
  if [username] == "" or ![username] { mutate { remove_field => ["username"] } }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "instagram_profiles" # 인덱스 이름 여기서 설정
    user => "logstash_internal"
    password => "${LOGSTASH_INTERNAL_PASSWORD}"
  }

  stdout {
    codec => rubydebug
  }
}
